/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.inventoryManagerInterface;

import business.dataset.Data;
import business.enterprise.Enterprise;
import business.organization.InventoryOrganization;
import business.organization.Organization;
import business.organization.PackageOrganization;
import business.product.Category;
import business.product.Product;
import business.system.EcoSystem;
import business.workqueue.OrderItemRequest;
import business.workqueue.ReturnRequest;
import business.workqueue.WorkRequest;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author baochenhu
 */
public class ProcessWorkQueueJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcessWorkQueueJPanel
     */
    JPanel container;
    Organization organization;
    Enterprise enterprise;
    EcoSystem ecosystem;
    public ProcessWorkQueueJPanel(JPanel container, Organization organization,Enterprise enterprise,EcoSystem ecosystem) {
        initComponents();
        this.container=container;
        this.organization=organization;
        this.enterprise= enterprise;
        this.ecosystem= ecosystem;    
        populateTable();
    }
    
    public void populateTable(){
       InventoryOrganization inventoryOrganization=(InventoryOrganization) organization;
       DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
       model.setRowCount(0);
       DefaultTableModel model1=(DefaultTableModel) jTable2.getModel();
       model1.setRowCount(0);
       for(WorkRequest workRequest:inventoryOrganization.getWorkQueue().getWorkQueue())
       {   
           if(workRequest instanceof OrderItemRequest){
           Object[] obj=new Object[3];
           OrderItemRequest orderItemRequest=(OrderItemRequest) workRequest;
           obj[0] = orderItemRequest;
           obj[1] = orderItemRequest.getOrderItem().getQuantity();
           obj[2] = orderItemRequest.getStatus();
           model.addRow(obj);
           }else{
             Object[] obj=new Object[3];
             ReturnRequest returnRequest=(ReturnRequest)workRequest;
             obj[0] = returnRequest;
             obj[1] = returnRequest.getOrderItemRequest().getOrderItem().getQuantity();
             obj[2] = returnRequest.getStatus();
             model1.addRow(obj);
           }
       }
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Quantity", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 59, 585, 163));

        jLabel1.setText("Process:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 25, -1, -1));

        jButton1.setText("Process>>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(441, 248, 150, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product", "Quantity", "Status"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 306, 591, 256));

        jButton3.setText("Confirm>>");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(442, 593, 149, -1));

        jLabel2.setText("Order Item waiting to be returned:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 272, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       int selectedRow = jTable1.getSelectedRow();
       if(selectedRow>=0)
       {
          OrderItemRequest orderItemRequest = (OrderItemRequest) jTable1.getValueAt(selectedRow, 0);
          orderItemRequest.setStatus("Packaging");
          orderItemRequest.setInventoryDate(new Date());
          for(Organization organization : enterprise.getOrganizationList())
          {
             if(organization instanceof PackageOrganization)
             {
                 PackageOrganization packageOrganization=(PackageOrganization)organization;
                 packageOrganization.getWorkQueue().createAndAddWorkRequest(orderItemRequest);
             }
          }
          //Change the product number in the inventory
          InventoryOrganization inventoryOrganization=(InventoryOrganization) organization;
          for(Category category:inventoryOrganization.getCategoryCatalog()){
              for(Product product:category.getProductList()){
                 if(product.equals(orderItemRequest.getOrderItem().getProduct()))
                 {
                    int remainingAvail=product.getAvailability()-orderItemRequest.getOrderItem().getQuantity();
                    product.setAvailability(remainingAvail);
                    
                    Data data=new Data();
                    data.setProductName(product.getProductName());
                    data.setSaleAmount(orderItemRequest.getOrderItem().getQuantity());
                    
                    inventoryOrganization.getDataSet().createData(data);
                 }
                 
              }    
          }
       }
       populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int selectedRow = jTable2.getSelectedRow();
        if(selectedRow>=0){
          ReturnRequest returnRequest=(ReturnRequest) jTable2.getValueAt(selectedRow, 0);
          returnRequest.setStatus("Confirmed");
          returnRequest.getSender().getWorkQueue().createAndAddWorkRequest(returnRequest);
        
        }
        populateTable();
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
